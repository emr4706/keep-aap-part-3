{"ast":null,"code":"import _objectSpread from \"/Users/user/Desktop/keep-aap-part-3/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/user/Desktop/keep-aap-part-3/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Desktop/keep-aap-part-3/src/components/CreatePost.js\";\nimport React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab'; ///button icin///\n\nimport Zoom from '@material-ui/core/Zoom'; //button animation icin ///\n\nimport axios from 'axios';\n\nfunction CreatePost(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isExpanded = _useState2[0],\n        setExpanded = _useState2[1];\n\n  const _useState3 = useState({\n    title: \"\",\n    content: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        note = _useState4[0],\n        setNote = _useState4[1];\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setNote(prevNote => {\n      return _objectSpread({}, prevNote, {\n        [name]: value\n      });\n    });\n  };\n\n  const handleClick = e => {\n    axios.post('http://localhost:5000/posts/add', note).then(res => console.log(res.data));\n    note.title !== \"\" & note.content !== \"\" && props.onAdd(note); /// if note title and note content not equal to empty string then render//// \n\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    e.preventDefault();\n  };\n\n  const expand = () => {\n    setExpanded(true);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"create-note\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, isExpanded && React.createElement(\"input\", {\n    onChange: handleChange,\n    value: note.title,\n    name: \"title\",\n    placeholder: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    onChange: handleChange,\n    onClick: expand,\n    value: note.content,\n    name: \"content\",\n    placeholder: \"Take a note...\",\n    rows: isExpanded ? \"3\" : \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Zoom, {\n    in: isExpanded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })))));\n}\n\nexport default CreatePost;","map":{"version":3,"sources":["/Users/user/Desktop/keep-aap-part-3/src/components/CreatePost.js"],"names":["React","useState","AddIcon","Fab","Zoom","axios","CreatePost","props","isExpanded","setExpanded","title","content","note","setNote","handleChange","e","target","name","value","prevNote","handleClick","post","then","res","console","log","data","onAdd","preventDefault","expand"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CAAwC;;AACxC,OAAOC,IAAP,MAAiB,wBAAjB,C,CAA2C;;AAC3C,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,oBACON,QAAQ,CAAC,KAAD,CADf;AAAA;AAAA,QACpBO,UADoB;AAAA,QACRC,WADQ;;AAAA,qBAGHR,QAAQ,CAAC;AAC7BS,IAAAA,KAAK,EAAC,EADuB;AAE7BC,IAAAA,OAAO,EAAC;AAFqB,GAAD,CAHL;AAAA;AAAA,QAGpBC,IAHoB;AAAA,QAGdC,OAHc;;AAQ3B,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAAA,sBAENA,CAAC,CAACC,MAFI;AAAA,UAErBC,IAFqB,aAErBA,IAFqB;AAAA,UAEfC,KAFe,aAEfA,KAFe;AAG5BL,IAAAA,OAAO,CAACM,QAAQ,IAAI;AAChB,+BAAWA,QAAX;AAAqB,SAACF,IAAD,GAAOC;AAA5B;AACH,KAFM,CAAP;AAGC,GAND;;AAQA,QAAME,WAAW,GAAIL,CAAD,IAAO;AACzBV,IAAAA,KAAK,CAACgB,IAAN,CAAW,iCAAX,EAA8CT,IAA9C,EACCU,IADD,CACMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CADb;AAIAd,IAAAA,IAAI,CAACF,KAAL,KAAa,EAAb,GAAkBE,IAAI,CAACD,OAAL,KAAe,EAAjC,IAAuCJ,KAAK,CAACoB,KAAN,CAAYf,IAAZ,CAAvC,CALyB,CAKiC;;AAExDC,IAAAA,OAAO,CAAC;AACJH,MAAAA,KAAK,EAAC,EADF;AAEJC,MAAAA,OAAO,EAAC;AAFJ,KAAD,CAAP;AAKAI,IAAAA,CAAC,CAACa,cAAF;AACH,GAbD;;AAeA,QAAMC,MAAM,GAAG,MAAM;AACnBpB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,UAAU,IAAI;AACf,IAAA,QAAQ,EAAEM,YADK;AAEf,IAAA,KAAK,EAAEF,IAAI,CAACF,KAFG;AAGf,IAAA,IAAI,EAAC,OAHU;AAIf,IAAA,WAAW,EAAC,OAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAOE;AACA,IAAA,QAAQ,EAAEI,YADV;AAEA,IAAA,OAAO,EAAEe,MAFT;AAGA,IAAA,KAAK,EAAEjB,IAAI,CAACD,OAHZ;AAIA,IAAA,IAAI,EAAC,SAJL;AAKA,IAAA,WAAW,EAAC,gBALZ;AAMA,IAAA,IAAI,EAAEH,UAAU,GAAG,GAAH,GAAS,GANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAeE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEY,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CADA,CAfF,CADF,CADF;AAuBD;;AAED,eAAed,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';///button icin///\nimport Zoom from '@material-ui/core/Zoom'; //button animation icin ///\nimport axios from 'axios';\n\nfunction CreatePost(props) {\nconst [isExpanded, setExpanded] = useState(false);\n\nconst [note, setNote] = useState({\n    title:\"\",\n    content:\"\"\n})\n\nconst handleChange = (e) => {\n\nconst {name, value} = e.target;\nsetNote(prevNote => {\n    return {...prevNote, [name]:value}\n})\n}\n\nconst handleClick = (e) => {\n  axios.post('http://localhost:5000/posts/add', note)\n  .then(res => console.log(res.data));\n\n\n  note.title!==\"\" & note.content!==\"\" && props.onAdd(note); /// if note title and note content not equal to empty string then render//// \n    \n    setNote({\n        title:\"\",\n        content:\"\"\n    });\n\n    e.preventDefault();\n}\n\nconst expand = () => {\n  setExpanded(true);\n}\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        {isExpanded && <input\n        onChange={handleChange}\n        value={note.title} \n        name=\"title\" \n        placeholder=\"Title\" \n        />}\n        <textarea\n        onChange={handleChange}\n        onClick={expand}\n        value={note.content} \n        name=\"content\" \n        placeholder=\"Take a note...\" \n        rows={isExpanded ? \"3\" : \"1\"} \n        />\n        <Zoom in={isExpanded} >\n        <Fab onClick={handleClick}><AddIcon /></Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreatePost;\n"]},"metadata":{},"sourceType":"module"}